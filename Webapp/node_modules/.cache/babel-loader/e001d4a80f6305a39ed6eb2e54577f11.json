{"ast":null,"code":"var _jsxFileName = \"/Users/cosmos/Desktop/embed/webapp/src/App.js\";\nimport React, { Component } from \"react\";\nimport Info from \"./components/Information/Info\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchPotState = () => {\n      fetch('http://18.134.242.125:8000' + \"/pot\").then(res => res.json()).then(res => {\n        console.log(res);\n        const {\n          humidity,\n          tempurature,\n          lightness,\n          weight,\n          ph,\n          speaker,\n          motot,\n          waterpump1,\n          waterpump2\n        } = res;\n        this.setState({\n          humidity,\n          tempurature,\n          lightness,\n          weight,\n          ph,\n          speaker,\n          motot,\n          waterpump1,\n          waterpump2\n        });\n      });\n    };\n\n    this.state = {\n      isServerConnected: false,\n      isPotConnected: false,\n      humidity: 10,\n      tempurature: 20,\n      lightness: 0,\n      weight: 0,\n      ph: 0,\n      speaker: 0,\n      motor: 0,\n      waterpump1: 0,\n      waterpump2: 0\n    };\n  }\n\n  componentDidMount() {\n    // check if server is online\n    fetch('http://18.134.242.125:8000' + \"/check\").then(res => {\n      if (res.status == 200) {\n        console.log(\"server is online\");\n        this.setState({\n          isServerConnected: true\n        });\n      }\n    }).catch(err => console.log(err));\n    this.fetchPotState();\n    const timeInterval = 200;\n    this.timer = setInterval(() => {\n      this.fetchPotState();\n    }, timeInterval);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Hex Future\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Info, {\n          isServerConnected: this.state.isServerConnected,\n          isPotConnected: this.state.isPotConnected,\n          humidity: this.state.humidity,\n          tempurature: this.state.tempurature,\n          lightness: this.state.lightness,\n          weight: this.state.weight,\n          ph: this.state.ph,\n          speaker: this.state.speaker,\n          motor: this.state.motor,\n          waterpump1: this.state.waterpump1,\n          waterpump2: this.state.waterpump2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"degree\",\n              children: \"Turning degree: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              onChange: this.changeDegree,\n              name: \"degree\",\n              value: this.state.degree\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom\",\n        children: \"@2022 Imperial College London EEE/EIE HexFuture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/cosmos/Desktop/embed/webapp/src/App.js"],"names":["React","Component","Info","App","constructor","props","fetchPotState","fetch","then","res","json","console","log","humidity","tempurature","lightness","weight","ph","speaker","motot","waterpump1","waterpump2","setState","state","isServerConnected","isPotConnected","motor","componentDidMount","status","catch","err","timeInterval","timer","setInterval","render","changeDegree","degree"],"mappings":"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","sourcesContent":["import React,{ Component } from \"react\"\nimport Info from \"./components/Information/Info\"\nimport \"./App.css\"\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isServerConnected: false,\n      isPotConnected: false,\n      humidity:10,\n      tempurature:20,\n      lightness:0,\n      weight:0,\n      ph:0,\n      speaker:0,\n      motor:0,\n      waterpump1:0,\n      waterpump2:0\n    }\n  }\n\n  fetchPotState = () => {\n    fetch('http://18.134.242.125:8000'+ \"/pot\")\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res)\n        const {humidity, tempurature,lightness,weight,ph,speaker,motot,waterpump1,waterpump2} = res\n        this.setState({humidity, tempurature,lightness,weight,ph,speaker,motot,waterpump1,waterpump2})\n      })\n  }\n\n\n  componentDidMount() {\n    // check if server is online\n    fetch('http://18.134.242.125:8000' + \"/check\")\n      .then((res) => {\n        if (res.status == 200) {\n          console.log(\"server is online\")\n          this.setState({ isServerConnected: true })\n        }\n      })\n      .catch((err) => console.log(err))\n\n    this.fetchPotState()\n    const timeInterval = 200\n    this.timer = setInterval(() => {\n      this.fetchPotState()\n    }, timeInterval)\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"title\">Hex Future</h1>\n\n        \n        <div className=\"row\">\n          <Info\n                isServerConnected = {this.state.isServerConnected}\n                isPotConnected = {this.state.isPotConnected}\n                humidity = {this.state.humidity}\n                tempurature= {this.state.tempurature}\n                lightness= {this.state.lightness}\n                weight= {this.state.weight}\n                ph= {this.state.ph}\n                speaker= {this.state.speaker}\n                motor= {this.state.motor}\n                waterpump1= {this.state.waterpump1}\n                waterpump2= {this.state.waterpump2}\n          />\n          <tr>\n            <td>\n              <label for=\"degree\">Turning degree: </label>\n            </td>\n            <td>\n              <input type=\"number\" onChange={this.changeDegree} name=\"degree\" value={this.state.degree} />\n            </td>\n          </tr>\n        </div>\n        <div className=\"bottom\">@2022 Imperial College London EEE/EIE HexFuture</div>\n      </div>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}