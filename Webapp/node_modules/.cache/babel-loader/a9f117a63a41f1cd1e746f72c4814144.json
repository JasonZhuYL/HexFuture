{"ast":null,"code":"var _jsxFileName = \"/Users/cosmos/Desktop/embed/webapp/src/App.js\";\nimport React, { Component } from \"react\";\nimport Info from \"./components/Information/Info\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchPotState = () => {\n      fetch('http://18.134.242.125:8000' + \"/pot\").then(res => res.json()).then(res => {\n        console.log(res);\n        const {\n          humidity,\n          tempurature,\n          lightness,\n          weight,\n          ph\n        } = res;\n        this.setState({\n          humidity,\n          tempurature,\n          lightness,\n          weight,\n          ph\n        });\n      });\n    };\n\n    this.state = {\n      isServerConnected: false,\n      isPotConnected: false,\n      humidity: 0,\n      tempurature: 0,\n      lightness: 0,\n      weight: 0,\n      ph: 0,\n      speaker: 0,\n      motor: 0,\n      waterpump1: 0,\n      waterpump2: 0\n    };\n  }\n\n  componentDidMount() {\n    // check if server is online\n    fetch('http://18.134.242.125:8000' + \"/check\").then(res => {\n      if (res.status == 200) {\n        console.log(\"server is online\");\n        this.setState({\n          isServerConnected: true\n        });\n      }\n    }).catch(err => console.log(err));\n    this.fetchPotState();\n    const timeInterval = 200;\n    this.timer = setInterval(() => {\n      this.fetchRoverState();\n      this.fetchBallsPosition();\n    }, timeInterval);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Hex Future\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Info, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/cosmos/Desktop/embed/webapp/src/App.js"],"names":["React","Component","Info","App","constructor","props","fetchPotState","fetch","then","res","json","console","log","humidity","tempurature","lightness","weight","ph","setState","state","isServerConnected","isPotConnected","speaker","motor","waterpump1","waterpump2","componentDidMount","status","catch","err","timeInterval","timer","setInterval","fetchRoverState","fetchBallsPosition","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAO,WAAP;;AAGA,eAAe,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AACzCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiBnBC,aAjBmB,GAiBH,MAAM;AACpBC,MAAAA,KAAK,CAAC,+BAA8B,MAA/B,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACbE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,cAAM;AAACI,UAAAA,QAAD;AAAWC,UAAAA,WAAX;AAAuBC,UAAAA,SAAvB;AAAiCC,UAAAA,MAAjC;AAAwCC,UAAAA;AAAxC,YAA8CR,GAApD;AACA,aAAKS,QAAL,CAAc;AAACL,UAAAA,QAAD;AAAWC,UAAAA,WAAX;AAAuBC,UAAAA,SAAvB;AAAiCC,UAAAA,MAAjC;AAAwCC,UAAAA;AAAxC,SAAd;AAED,OAPH;AAQD,KA1BkB;;AAEjB,SAAKE,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE,KADR;AAEXC,MAAAA,cAAc,EAAE,KAFL;AAGXR,MAAAA,QAAQ,EAAC,CAHE;AAIXC,MAAAA,WAAW,EAAC,CAJD;AAKXC,MAAAA,SAAS,EAAC,CALC;AAMXC,MAAAA,MAAM,EAAC,CANI;AAOXC,MAAAA,EAAE,EAAC,CAPQ;AAQXK,MAAAA,OAAO,EAAC,CARG;AASXC,MAAAA,KAAK,EAAC,CATK;AAUXC,MAAAA,UAAU,EAAC,CAVA;AAWXC,MAAAA,UAAU,EAAC;AAXA,KAAb;AAaD;;AAcDC,EAAAA,iBAAiB,GAAG;AAClB;AACAnB,IAAAA,KAAK,CAAC,+BAA+B,QAAhC,CAAL,CACGC,IADH,CACSC,GAAD,IAAS;AACb,UAAIA,GAAG,CAACkB,MAAJ,IAAc,GAAlB,EAAuB;AACrBhB,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,aAAKM,QAAL,CAAc;AAAEE,UAAAA,iBAAiB,EAAE;AAArB,SAAd;AACD;AACF,KANH,EAOGQ,KAPH,CAOUC,GAAD,IAASlB,OAAO,CAACC,GAAR,CAAYiB,GAAZ,CAPlB;AASA,SAAKvB,aAAL;AAEA,UAAMwB,YAAY,GAAG,GAArB;AACA,SAAKC,KAAL,GAAaC,WAAW,CAAC,MAAM;AAC7B,WAAKC,eAAL;AACA,WAAKC,kBAAL;AACD,KAHuB,EAGrBJ,YAHqB,CAAxB;AAID;;AAKDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA9DwC","sourcesContent":["import React,{ Component } from \"react\"\nimport Info from \"./components/Information/Info\"\nimport \"./App.css\"\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isServerConnected: false,\n      isPotConnected: false,\n      humidity:0,\n      tempurature:0,\n      lightness:0,\n      weight:0,\n      ph:0,\n      speaker:0,\n      motor:0,\n      waterpump1:0,\n      waterpump2:0\n    }\n  }\n\n  fetchPotState = () => {\n    fetch('http://18.134.242.125:8000'+ \"/pot\")\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res)\n        const {humidity, tempurature,lightness,weight,ph} = res\n        this.setState({humidity, tempurature,lightness,weight,ph})\n        \n      })\n  }\n\n\n  componentDidMount() {\n    // check if server is online\n    fetch('http://18.134.242.125:8000' + \"/check\")\n      .then((res) => {\n        if (res.status == 200) {\n          console.log(\"server is online\")\n          this.setState({ isServerConnected: true })\n        }\n      })\n      .catch((err) => console.log(err))\n\n    this.fetchPotState()\n\n    const timeInterval = 200\n    this.timer = setInterval(() => {\n      this.fetchRoverState()\n      this.fetchBallsPosition()\n    }, timeInterval)\n  }\n\n\n\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"title\">Hex Future</h1>\n        <div className=\"row\">\n          <Info/>\n        </div>\n      </div>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}